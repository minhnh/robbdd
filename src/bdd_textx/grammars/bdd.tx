import base

Model:

namespaces=NamespaceDeclare*

(
behaviours+=Behaviour
|
events+=Event
)*

templates=ScenarioTemplate*

stories=UserStory*
;

Behaviour: 'Behaviour' name=ID ;

Event: 'Event' name=ID ;

UserStory:
'User' 'Story' '(' 'ns' '=' ns=[NamespaceDeclare|FQN] ')'  name=ID '{'

'As' 'A' role=STRING
'I' 'Want' feature=STRING
'So' 'That' benefit=STRING

'Scenarios' ':'
    scenarios=ScenarioVariant+
'}'
;

ScenarioVariant:
'Scenario' name=ID '{'
    'template' ':' template=[ScenarioTemplate|FQN]

    ('Given' ':' given_clauses=Clause+)?
    ('When' ':' when_event_clauses=EventWhenClause+)?
    ('Then' ':' then_clauses=Clause+)?
'}'
;

ScenarioTemplate:
'Scenario' 'Template' '(' 'ns' '=' ns=[NamespaceDeclare|FQN] ')' name=ID '{'
    variables=ScenarioVariable*

    'Given' ':'
        given_clauses=Clause+

    'When' ':'
        when_event_clauses=EventWhenClause*
        when_behaviour=BehaviourWhenClause

    'Then' ':'
        then_clauses=Clause+
'}'
;

ScenarioVariable: 'var' name=ID;

EventWhenClause: 'event' '<' event=[Event|FQN] '>' 'occurs';

BehaviourWhenClause: AgentBehaviourWhenClause ;
AgentBehaviourWhenClause: '<' agent=[ScenarioVariable|FQN] '>' 'executes'  '<' behaviour=[Behaviour|FQN] '>' ;

Clause: LocatedAtFluentClause | TextClause;

TextClause: text=STRING;

TimeConstraint: BeforeBehaviour | AfterBehaviour ;
BeforeBehaviour: 'before' '<' behaviour=[Behaviour|FQN] '>';
AfterBehaviour: 'after' '<' behaviour=[Behaviour|FQN] '>';
LocatedAtFluentClause:
    '<' object=[ScenarioVariable|FQN] '>' 'is' 'located' 'at' '<' workspace=[ScenarioVariable|FQN] '>'
    tc=TimeConstraint ;

import "lab.scene"

ns bdd='https://secorolab.github.io/models/acceptance-criteria/bdd/variants/pickplace-isaac/'
ns bdd_tmpl='https://secorolab.github.io/models/acceptance-criteria/bdd/templates/'

Task (ns=bdd_tmpl) tsk_pickplace
Event (ns=bdd_tmpl) evt_scenario_start
Event (ns=bdd_tmpl) evt_pick_start
Event (ns=bdd_tmpl) evt_place_end
Event (ns=bdd_tmpl) evt_scenario_end

Scenario Template (ns=bdd_tmpl) tmpl_conveyor_sort {
    task: <tsk_pickplace>

    set var target_objects
    set var place_workspaces
    var robot
    var conveyor
    var conveyor_speed

    Given:
        holds(<conveyor> has config <conveyor_speed>, before <evt_scenario_start>)
    for all ( var x in <target_objects> ) {
        Given:
        (
            holds(<x> is located at <conveyor>, before <evt_pick_start>)
            and
            holds(<robot> can reach <x>, before <evt_pick_start>)
        )
        When:
            Behaviour (ns=bdd_tmpl) pickplace: <robot> picks <x> and places at <place_workspaces>
        Then:
            ( var y exists in <place_workspaces> ) such that {
                holds(<x> is located at <y>, after <evt_place_end>)
            }
    }
    Then:
        holds(<target_objects> are sorted into <place_workspaces>, after <evt_place_end>)
}

User Story (ns=bdd) us_pickplace_single_arm {
    As A "Function Developer"
    I Want "Pick and place behaviour"
    So That "I can transport objects"

    Scenarios:
        Scenario simple_pick {
            template: <tmpl_conveyor_sort>
            scene: <lab_scene>

            | var <tmpl_conveyor_sort.target_objects> | var <tmpl_conveyor_sort.conveyor> | var <tmpl_conveyor_sort.place_workspaces> | var <tmpl_conveyor_sort.robot> |
            | obj <lab_scene.box> | ws <lab_scene.dining_table> | ws <lab_scene.shelf> | agn <lab_scene.freddy> |
            | obj <lab_scene.ball> | ws <lab_scene.shelf> | ws <lab_scene.dining_table> | agn <lab_scene.lucy> |
            | obj <lab_scene.bottle> | ws <lab_scene.dining_table> | ws <lab_scene.shelf> | agn <lab_scene.freddy> |
        }
}

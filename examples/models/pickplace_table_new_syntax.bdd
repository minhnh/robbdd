import "lab.scene"

ns bdd='https://secorolab.github.io/models/acceptance-criteria/bdd/variants/pickplace-isaac/'
ns bdd_tmpl='https://secorolab.github.io/models/acceptance-criteria/bdd/templates/'

Behaviour bhv_pickplace
Task tsk_pickplace
Event evt_pick_start
Event evt_place_end

Scenario Template (ns=bdd_tmpl) tmpl_pickplace {
    var var_target_objects
    var var_robot
    var var_pick_ws
    var var_place_ws

    for all ( var x in <var_target_objects> ) {
        Given:
            holds(<x> is located at <var_pick_ws>, every 5 s)
        When:
        <bhv_pickplace> occurs
        Then:
            var y exists in <var_place_ws> such that {
                holds(<x> is located at <y>, after <evt_place_end>)
            }
    }
    Then:
        <var_target_objects> is located at <var_place_ws> after <evt_place_end>
}

User Story (ns=bdd) us_pickplace_single_arm {
    As A "Function Developer"
    I Want "Pick and place behaviour"
    So That "I can transport objects"

    Scenarios:
        Scenario simple_pick {
            template: <tmpl_pickplace>
            scene: <lab_scene>
            task: <tsk_pickplace>

            | var <tmpl_pickplace.var_target_objects> | var <tmpl_pickplace.var_pick_ws> | var <tmpl_pickplace.var_place_ws> | var <tmpl_pickplace.var_robot> |
            | obj <lab_scene.box> | ws <lab_scene.dining_table> | ws <lab_scene.shelf> | agn <lab_scene.freddy> |
            | obj <lab_scene.ball> | ws <lab_scene.shelf> | ws <lab_scene.dining_table> | agn <lab_scene.lucy> |
            | obj <lab_scene.bottle> | ws <lab_scene.dining_table> | ws <lab_scene.shelf> | agn <lab_scene.freddy> |
        }
}

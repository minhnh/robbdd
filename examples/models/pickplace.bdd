import "lab.scene"

ns bdd='https://secorolab.github.io/models/acceptance-criteria/bdd/variants/pickplace-isaac/'
ns bdd_tmpl='https://secorolab.github.io/models/acceptance-criteria/bdd/templates/'

Behaviour pick_and_place
Event e_custom

Scenario Template (ns=bdd_tmpl) tmpl_pickplace {
    var target_object
    var robot
    var pick_ws
    var place_ws

    Given:
        <target_object> is located at <pick_ws> before <pick_and_place>
    When:
        <robot> executes <pick_and_place>
    Then:
        <target_object> is located at <place_ws> after <pick_and_place>
}

User Story (ns=bdd) us_pickplace_single_arm {
    As A "Function Developer"
    I Want "Pick and place behaviour"
    So That "I can transport objects"

    Scenarios:
        Scenario simple_pick {
            template: <tmpl_pickplace>
            scene: <lab_scene>

            var <tmpl_pickplace.target_object> can be:
                - obj <lab_scene.box>
                - obj <lab_scene.ball>
                - obj <lab_scene.bottle>
            var <tmpl_pickplace.pick_ws> can be:
                - ws <lab_scene.dining_table>
                - ws <lab_scene.shelf>
            var <tmpl_pickplace.place_ws> can be:
                - ws <lab_scene.shelf>
                - ws <lab_scene.dining_table>
            var <tmpl_pickplace.robot> can be:
                - agn <lab_scene.freddy>
                - agn <lab_scene.lucy>

            When:
                event <e_custom> occurs
            Then:
                <tmpl_pickplace.robot> does not drop <tmpl_pickplace.target_object> during <pick_and_place>
        }
}
